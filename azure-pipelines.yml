trigger:
- develop

pool:
  #name: Default
  vmImage: 'ubuntu-latest'

variables:
  - group: TEST-ENV

stages:
  - stage: Build_docker_image
    displayName: Build Docker Images and Push To ACR
    jobs:
      - job: Build
        displayName: 'Run docker-compose.yml'
        steps:
          - task: DockerCompose@0
            displayName: Build Docker Image
            inputs:
              azureSubscription: $(AZURESUBSCRIPTION)
              azureContainerRegistry: $(AZURECONTAINERREGISTRY)
              dockerComposeFile: '**/docker-compose.yaml'
              action: 'Build services'
              #dockerComposeCommand: up --build --no-start
          - task: DockerCompose@0
            displayName: Push Docker Images To ACR
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureSubscription: $(AZURESUBSCRIPTION)
              azureContainerRegistry: $(AZURECONTAINERREGISTRY)
              dockerComposeFile: '**/docker-compose.yaml'
              action: 'Push services'
              includeSourceTags: true
              includeLatestTag: true
      - job: Publish
        displayName: 'Publish Artifact'
        steps:
          - task: UseDotNet@2
            displayName: 'Install Dotnet'
            inputs:
              packageType: 'sdk'
              version: '7.x'  # Use the appropriate .NET version
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - script: dotnet build "FHMQ9Common.Package.csproj" -c Release
            displayName: 'Build FHMQ9Common.Package '
            workingDirectory: $(System.DefaultWorkingDirectory)/libraries/FHMQ9Common.Package
          - task: NuGetCommand@2
            displayName: 'Pack the FHMQ9Common.Package'
            inputs:
              command: 'pack'
              packagesToPack: '**/libraries/**/*.csproj'
              packDestination: '$(Build.ArtifactStagingDirectory)'
              versioningScheme: 'byPrereleaseNumber'
              majorVersion: '1'
              minorVersion: '0'
              patchVersion: '0'
              buildProperties: 'Configuration=Release'

          - task: NuGetCommand@2
            displayName: 'Publish the FHMQ9Common.Package'
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: $(ARTIFACTS_FEED)
              allowPackageConflicts: true
              
  - stage: Deploy_aks
    displayName: Deploy to AKS
    jobs:
      - job: Deploy
        displayName: 'Deploy AKS'
        steps:
          - task: KubernetesManifest@0
            displayName: 'Deploy AgentService to AKS'
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aks-fhmq9demo-conn'
              namespace: 'default'
              manifests: |
                $(System.DefaultWorkingDirectory)/source/AgentService.WebApi/deployment.yaml
                $(System.DefaultWorkingDirectory)/source/AgentService.WebApi/service.yaml
              #rolloutStatusTimeout: '30'
          - task: KubernetesManifest@0
            displayName: 'Deploy MasterService to AKS'
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aks-fhmq9demo-conn'
              namespace: 'default'
              manifests: |
                $(System.DefaultWorkingDirectory)/source/MasterService.WebApi/deployment.yaml
                $(System.DefaultWorkingDirectory)/source/MasterService.WebApi/service.yaml
              #rolloutStatusTimeout: '30'
          - task: KubernetesManifest@0
            displayName: 'Deploy ProductService to AKS'
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aks-fhmq9demo-conn'
              namespace: 'default'
              manifests: |
                $(System.DefaultWorkingDirectory)/source/ProductService.WebApi/deployment.yaml
                $(System.DefaultWorkingDirectory)/source/ProductService.WebApi/service.yaml
              #rolloutStatusTimeout: '30'
          - task: KubernetesManifest@0
            displayName: 'Deploy Proxy to AKS'
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'aks-fhmq9demo-conn'
              namespace: 'default'
              manifests: |
                $(System.DefaultWorkingDirectory)/proxy/reverse.proxy/deployment.yaml
                $(System.DefaultWorkingDirectory)/proxy/reverse.proxy/service.yaml
              #rolloutStatusTimeout: '30'